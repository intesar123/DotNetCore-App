@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http.Extensions
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{ 
    //var returnUrl = @Context.Request.Query["returnurl"];
    //var returnUrl= Microsoft.AspNetCore.Http.Extensions.UriHelper.GetDisplayUrl(Context.Request);
    //var returnUrl = UriHelper.BuildAbsolute(Context.Request.Scheme, Request.Url.Host);
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
    </li>
    <li class="nav-item">
        @*<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">*@
            <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Context.Request.Path">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
</li>
}
else
{
    <li class="nav-item">
        @*<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>*@
        <a class="nav-link text-dark" asp-controller="Account" asp-action="register">Register</a>
    </li>
    <li class="nav-item">
        @*<a class="nav-link text-dark" asp-area="Identity"  asp-page="/Account/Login">Login</a>*@
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
    </li>
}
</ul>